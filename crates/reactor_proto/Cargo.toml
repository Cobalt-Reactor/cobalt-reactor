[package]
name = "reactor_proto"
version = "1.1.0"
readme = "README.md"
description = "An opinionated rust library for transforming on-disk assets into Entities in Bevy."
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
keywords.workspace = true
categories.workspace = true

[dependencies]
bevy = { workspace = true }
serde = { workspace = true }
bevy_common_assets = { workspace = true }
iyes_progress = { workspace = true, optional = true }

[features]
# All file formats are disabled by default: you will typically want to enable
# only the formats you need. Picking one per project is recommended.
default = ["ron", "hot_reload"]
# Support for iyes_progress
progress_tracking = ["dep:iyes_progress"]
# Support for hot reloading
hot_reload = ["bevy/file_watcher", "bevy/multi_threaded"]
# Support for all file format features
# Useful for testing
all_asset_loaders = ["ron", "toml", "yaml", "json", "msgpack", "xml", "csv"]
# Support for the RON file format
# This is a good choice for most projects, as it is a simple, human-readable and plays nice with enums.
ron = ["bevy_common_assets/ron"]
# Support for the TOML file format
# This is a straightforward choice for configuration files.
toml = ["bevy_common_assets/toml"]
# Support for the YAML file format
# This is a relatively common choice for configuration files,
# and substantially more complex than TOML
yaml = ["bevy_common_assets/yaml"]
# Support for the JSON file format
# JSON is nearly universal, but can be a bit verbose and nitpicky.
# The key advantage is that it is well-supported by web technologies,
# and has robust validation tooling.
json = ["bevy_common_assets/json"]
# Support for the MessagePack file format
# This is a binary format that is more compact than JSON, but not human-readable.
msgpack = ["bevy_common_assets/msgpack"]
# Support for the XML file format
# XML is meaningfully more complex and less compact than JSON,
# but comes with schemas and validation tools.
xml = ["bevy_common_assets/xml"]
# Support for the CSV file format.
# This is a great fit for tabular data, but notoriously flaky in edge cases due to the lack of a standard.
# Good interop with spreadsheet software though!
csv = ["bevy_common_assets/csv"]

[lints]
workspace = true
